[{"/home/deploy/go-hiking-demo/src/index.js":"1","/home/deploy/go-hiking-demo/src/reportWebVitals.js":"2","/home/deploy/go-hiking-demo/src/App.js":"3","/home/deploy/go-hiking-demo/src/axios/index.js":"4","/home/deploy/go-hiking-demo/src/pages/SearchResult.js":"5","/home/deploy/go-hiking-demo/src/pages/SearchPage.js":"6","/home/deploy/go-hiking-demo/src/components/TopBar/BackArrow.js":"7","/home/deploy/go-hiking-demo/src/components/SearchBar/SearchBar.js":"8","/home/deploy/go-hiking-demo/src/components/TopBar/TitleBar.js":"9","/home/deploy/go-hiking-demo/src/components/Lists/TrailList.js":"10","/home/deploy/go-hiking-demo/src/components/SideBar/Sidebar.js":"11","/home/deploy/go-hiking-demo/src/components/SideBar/Item.js":"12"},{"size":611,"mtime":1612146542940,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1611936120355,"results":"15","hashOfConfig":"14"},{"size":572,"mtime":1612146542932,"results":"16","hashOfConfig":"14"},{"size":286,"mtime":1612146634461,"results":"17","hashOfConfig":"14"},{"size":2635,"mtime":1612150815594,"results":"18","hashOfConfig":"14"},{"size":8257,"mtime":1612150815594,"results":"19","hashOfConfig":"14"},{"size":322,"mtime":1611938480668,"results":"20","hashOfConfig":"14"},{"size":2024,"mtime":1612150815594,"results":"21","hashOfConfig":"14"},{"size":606,"mtime":1612146542936,"results":"22","hashOfConfig":"14"},{"size":1989,"mtime":1612146542932,"results":"23","hashOfConfig":"14"},{"size":6862,"mtime":1612151567493,"results":"24","hashOfConfig":"14"},{"size":3097,"mtime":1612149289931,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"wi7u0a",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/home/deploy/go-hiking-demo/src/index.js",[],["54","55"],"/home/deploy/go-hiking-demo/src/reportWebVitals.js",[],"/home/deploy/go-hiking-demo/src/App.js",[],"/home/deploy/go-hiking-demo/src/axios/index.js",[],"/home/deploy/go-hiking-demo/src/pages/SearchResult.js",["56"],"import { Grid } from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../App.css\";\nimport SearchBar from \"../components/SearchBar/SearchBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BackArrow from \"../components/TopBar/BackArrow\";\nimport TrailList from \"../components/Lists/TrailList\";\nimport axios from \"axios\";\nimport TemporaryDrawer from \"../components/SideBar/Sidebar\";\n\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    \"X-Secure-Code\": \"12345678\",\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: \"16px\",\n  },\n}));\n\nfunction SearchResult(props) {\n  const classes = useStyles();\n  console.log(props); //印出SearchBar的aboutProps\n  var kw = \"\";\n  //判斷是否有來自於上一個頁面的kw，若沒有則從localStorage取值\n  if (props.location.aboutProps !== undefined) {\n    kw = props.location.aboutProps.name;\n  } else {\n    kw = localStorage.getItem(\"kw\");\n  }\n  //搜尋結果hook\n  const [searchResult, setSearchResult] = useState([]);\n  //頁面一載入就發送api請求\n  useEffect(() => {\n    searchApi(kw);\n  //載入完就清空kw，使重新載入頁面時會再發送一次apia請求\n    return () => {\n      kw=\"\";\n    };\n  }, [kw]);\n  //搜尋function\n  const searchApi = async (kw) => {\n    await api.get(\"/trail?filters=title:\" + kw).then((res) => {\n      setSearchResult(res.data);\n    });\n  };\n\n  //useEffect\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        alignItems=\"flex-start\"\n        justify=\"flex-start\"\n        spacing={1}\n      >\n        <Grid item xs={12}>\n          <Link to=\"/\">\n            <BackArrow />\n          </Link>\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n          spacing={1}\n        >\n          <Grid item xs={11}>\n            {/* 搜尋欄component */}\n            <SearchBar props={(searchApi, kw)} />\n          </Grid>\n          <Grid item xs={1}>\n            {/* 名彥大哥的超猛篩選器 */}\n            <TemporaryDrawer></TemporaryDrawer>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12}>\n          <div className={classes.text}>搜尋結果</div>\n        </Grid>\n        <Grid item xs={12} container direction=\"row\">\n          {/* 步道list component */}\n          <TrailList data={searchResult}></TrailList>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nexport default SearchResult;\n","/home/deploy/go-hiking-demo/src/pages/SearchPage.js",["57"],"import React, { Fragment } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid,BottomNavigationAction,CardActionArea } from \"@material-ui/core\";\nimport SearchBar from \"../components/SearchBar/SearchBar\";\nimport TitleBar from \"../components/TopBar/TitleBar\";\nimport { Link, withRouter} from 'react-router-dom';\n\nimport mapple from \"../asset/img/icon-mapple.png\";\nimport chellenge from \"../asset/img/icon-chellenge.png\"\nimport hotSpring from \"../asset/img/icon-hot-spring.png\";\nimport family from \"../asset/img/icon-family.png\";\nimport forest from \"../asset/img/icon-forest.png\";\nimport sakura from \"../asset/img/icon-sakura.png\";\n\nimport HomeIcon from '@material-ui/icons/Home';\nimport SearchIcon from '@material-ui/icons/Search';\nimport LocationSearchingIcon from '@material-ui/icons/LocationSearching';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nconst useStyles = makeStyles((theme) => ({\n    searchSetting:{\n        padding:\"0 5%\",\n    },\n    quitSearchText:{\n        fontFamily:\"NotoSansCJKtc\",\n        width:\"100%\",\n        textAlign:\"left\",\n        lineHeight:\"56px\",\n    },\n    quickSearchDiv:{\n        fontFamily:\"NotoSansCJKtc\",\n        width:\"100%\",\n        backgroundColor:\"#ffecdc\",\n        position:\"relative\",\n        height:\"72px\",\n    },\n    iconImg:{\n        position:\"absolute\",\n        right:0,\n        bottom:-10,\n    },\n    span:{\n        position:\"absolute\",\n        top:20,\n        left:20,\n\n    },\n    footer:{\n        boxShadow:\" 0 0 3px 0 rgba(0, 0, 0, 0.2)\",\n        backgroundColor:\"white\",\n        position:\"fixed\",\n        bottom:0,\n        left:0,\n        width:\"100%\",\n        fontFamily:\"NotoSansCJKtc\",\n    },\n    linkstlye:{\n        color:\"#000\",textDecoration: 'none'\n    }\n  }));\n\nfunction SearchPage(){\n    const classes = useStyles();\n    const quickSearchText={\n        mapple:'賞楓',\n        chellenge:'挑戰',\n        hotSpring:'溫泉',\n        family:'親子',\n        forest:'秘境',\n        sakura:'賞櫻',\n    };\n    // const [quickSearch,SetQuickSearch]=useState({\n    //     mapple:false,\n    //     chellenge:false,\n    //     hotSpring:false,\n    //     family:false,\n    //     forest:false,\n    //     sakura:false,\n    // });\n\n    return(\n        <>\n            <TitleBar  title=\"步道搜尋\"/>\n            <div className={classes.searchSetting}>\n                <SearchBar />\n                <div className={classes.quitSearchText}>快速搜尋</div>\n\n                <Grid container spacing={2}>\n                    <Grid item xs={6}>\n                        <Link to={{pathname:'/searchResult',aboutProps:quickSearchText.mapple}} \n                        className={classes.linkstlye} >\n                        <CardActionArea>\n                        <div className={classes.quickSearchDiv}>\n                            <span className={classes.span}>{quickSearchText.mapple}</span>\n                            <img src={mapple} className={classes.iconImg} alt=\"mapple.png\"></img>\n                        </div>\n                        </CardActionArea>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={6}>\n                    <Link to={{pathname:'/searchResult',aboutProps:quickSearchText.chellenge}} \n                        className={classes.linkstlye} >\n                        <CardActionArea>\n                        <div className={classes.quickSearchDiv}>\n                            <span className={classes.span}>{quickSearchText.chellenge}</span>\n                            <img src={chellenge} className={classes.iconImg}alt=\"chellenge.png\"></img>\n                        </div>\n                        </CardActionArea>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Link to={{pathname:'/searchResult',aboutProps:quickSearchText.hotSpring}} \n                        className={classes.linkstlye} >\n                        <CardActionArea>\n                        <div className={classes.quickSearchDiv}>\n                            <span className={classes.span}>{quickSearchText.hotSpring}</span>\n                            <img src={hotSpring} className={classes.iconImg} heigh=\"400\" alt=\"hotSpring.png\"></img>\n                        </div>\n                        </CardActionArea>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Link to={{pathname:'/searchResult',aboutProps:quickSearchText.family}} \n                        className={classes.linkstlye} >\n                        <CardActionArea>\n                        <div className={classes.quickSearchDiv}>\n                            <span className={classes.span}>{quickSearchText.family}</span>\n                            <img src={family} className={classes.iconImg} heigh=\"400\" alt=\"family.png\"></img>\n                        </div>\n                        </CardActionArea>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Link to={{pathname:'/searchResult',aboutProps:quickSearchText.forest}} \n                        className={classes.linkstlye} >\n                        <CardActionArea>\n                        <div className={classes.quickSearchDiv}>\n                            <span className={classes.span}>{quickSearchText.forest}</span>\n                            <img src={forest} className={classes.iconImg} heigh=\"400\" alt=\"forest.png\"></img>\n                        </div>\n                        </CardActionArea>\n                        </Link>\n                    </Grid>\n                    <Grid item xs={6}>\n                        <Link to={{pathname:'/searchResult',aboutProps:quickSearchText.sakura}} \n                        className={classes.linkstlye} >\n                        <CardActionArea>\n                        <div className={classes.quickSearchDiv}>\n                            <span className={classes.span}>{quickSearchText.sakura}</span>\n                            <img src={sakura} className={classes.iconImg} heigh=\"400\" alt=\"sakura.png\"></img>\n                        </div>\n                        </CardActionArea>\n                        </Link>\n                    </Grid>\n                </Grid>\n            </div>\n            <div className={classes.footer}>\n                <Grid container>\n                    <Grid item xs={3}>\n                        <div className={classes.bottomNav}>\n                            <div>\n                                <BottomNavigationAction \n                                label=\"首頁\" \n                                showLabel \n                                icon={<HomeIcon />} />\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className={classes.bottomNav}>\n                            <div>\n                                <BottomNavigationAction \n                                label=\"步道搜尋\" \n                                showLabel \n                                icon={<SearchIcon />} />\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className={classes.bottomNav}>\n                            <div>\n                                <BottomNavigationAction \n                                label=\"附近步道\" \n                                showLabel \n                                icon={<LocationSearchingIcon />} />\n                            </div>\n                        </div>\n                    </Grid>\n                    <Grid item xs={3}>\n                        <div className={classes.bottomNav}>\n                            <div>\n                                <BottomNavigationAction \n                                label=\"我的最愛\" \n                                showLabel \n                                icon={<FavoriteIcon />} />\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    )\n}\n\nexport default SearchPage;","/home/deploy/go-hiking-demo/src/components/TopBar/BackArrow.js",[],"/home/deploy/go-hiking-demo/src/components/SearchBar/SearchBar.js",[],"/home/deploy/go-hiking-demo/src/components/TopBar/TitleBar.js",[],"/home/deploy/go-hiking-demo/src/components/Lists/TrailList.js",[],"/home/deploy/go-hiking-demo/src/components/SideBar/Sidebar.js",["58"],"/home/deploy/go-hiking-demo/src/components/SideBar/Item.js",["59"],"import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Icon from \"@material-ui/core/Icon\";\nimport \"font-awesome/css/font-awesome.min.css\";\n\nexport default function Item(props) {\n  const { titleL, titleR, marks, btns, btns_num, reset } = props;\n  const [isDisplaymMoreBtn, setIsDisplaymMoreBtn] = useState(true);\n  const [btnClick, setBtnClick] = useState();\n  const [sliderNum, setSliderNum] = useState(2);\n\n  useEffect(() => {\n    if (marks) {\n      setSliderNum(() => marks.defaultVal);\n    }\n  }, [marks]);\n\n  const showBtns = (displaymMoreBtn) => {\n    if (displaymMoreBtn !== null && displaymMoreBtn !== isDisplaymMoreBtn)\n      setIsDisplaymMoreBtn(displaymMoreBtn);\n    return (\n      <>\n        {btns.map((btn, index) => {\n          if (!isDisplaymMoreBtn || index + 1 <= btns_num) {\n            return (\n              <sapn className=\"btn-gray\">\n                <Button\n                  variant=\"contained\"\n                  className={\n                    reset\n                      ? resetBtn()\n                      : btnClick === btn.value\n                        ? \"MuiButton-active\"\n                        : \"\"\n                  }\n                  disableElevation\n                  onClick={async () => {\n                    setBtnClick(btn.value);\n                    props.getChild(btn.value);\n                  }}\n                  key={btn.value}\n                >\n                  {btn.title}\n                </Button>\n              </sapn>\n            );\n          }\n        })}\n        {showDisplaymMoreBtn()}\n      </>\n    );\n  };\n  const showDisplaymMoreBtn = () => (\n    <div\n      className=\"showDisplaymMoreBtn\"\n      onClick={() => {\n        showBtns(!isDisplaymMoreBtn);\n      }}\n    >\n      <Icon\n        className={`fa ${isDisplaymMoreBtn ? \"fa-angle-down\" : \"fa-angle-up\"}`}\n      />\n      {isDisplaymMoreBtn ? \"顯示更多\" : \"顯示較少\"}\n    </div>\n  );\n  const showSlider = (marks) => (\n    <div className=\"slider\">\n      <Slider\n        step={null}\n        value={reset ? resetSlider(marks) : sliderNum}\n        valueLabelDisplay=\"off\"\n        marks={marks.marks}\n        min={marks.marks[0].value}\n        max={marks.marks[marks.marks.length - 1].value}\n        onChangeCommitted={(event, num) => {\n          setSliderNum(() => num);\n          props.getChild(num);\n        }}\n      />\n    </div>\n  );\n  const resetBtn = () => {\n    if (btnClick !== \"\") {\n      setBtnClick(() => \"\");\n      props.getChild(\"\");\n    }\n  };\n  const resetSlider = (marks) => {\n    if (sliderNum !== marks.defaultVal) {\n      setSliderNum(() => marks.defaultVal);\n      props.getChild(marks.defaultVal);\n    }\n    return marks.defaultVal;\n  };\n  return (\n    <div className=\"item\">\n      <div className=\"item__header\">\n        <span>{titleL}</span>\n        <span>{titleR}</span>\n      </div>\n      {marks ? (\n        <div className=\"item__marks\">{showSlider(marks)}</div>\n      ) : (\n          <div className=\"item__btns\">{showBtns(null)}</div>\n        )}\n    </div>\n  );\n}\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":43,"column":10,"nodeType":"66","endLine":43,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":6,"column":16,"nodeType":"69","messageId":"70","endLine":6,"endColumn":26},{"ruleId":"64","severity":1,"message":"71","line":99,"column":13,"nodeType":"72","endLine":106,"endColumn":4},{"ruleId":"73","severity":1,"message":"74","line":24,"column":32,"nodeType":"72","messageId":"75","endLine":24,"endColumn":34},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react-hooks/exhaustive-deps","Assignments to the 'kw' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation"]